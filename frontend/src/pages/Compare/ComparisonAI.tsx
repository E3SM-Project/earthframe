import { useState } from 'react';
import { fetchAISimAnalysis } from '@/api/compareAPI';
import { Button } from '@/components/ui/button';
import { Simulation } from '@/App';
import { X, Sparkles } from 'lucide-react';
import { Loader2 } from 'lucide-react'; // shadcn spinner icon

interface Props {
  selectedSimulations: Simulation[];
}

export function ComparisonAI({ selectedSimulations }: Props) {
  const [aiResult, setAIResult] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);
  const [open, setOpen] = useState(false);

  const handleAICompare = async () => {
    setLoading(true);
    setAIResult(null);
    try {
      const simulations = selectedSimulations.map((sim) => ({ ...sim }));
      const aiSummary = await fetchAISimAnalysis(simulations);
      setAIResult(aiSummary || 'No summary available.');
    } catch (err) {
      setAIResult('Error generating summary.');
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div
      style={{
        position: 'fixed',
        bottom: 24,
        right: 24,
        zIndex: 50,
      }}
    >
      {!open && (
        <Button
          onClick={() => {
            setOpen(true);
            handleAICompare();
          }}
          variant="default"
          size="lg"
          className="flex items-center gap-3 shadow-xl bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 text-white font-extrabold border-0 px-6 py-3 rounded-full transition-transform hover:scale-105 hover:from-indigo-600 hover:to-pink-600 focus:ring-4 focus:ring-purple-300"
          style={{
            boxShadow: '0 8px 24px 0 rgba(99,102,241,0.15), 0 1.5px 4px 0 rgba(139,92,246,0.10)',
            letterSpacing: '0.03em',
          }}
        >
          <span className="animate-pulse">
            <Sparkles size={22} className="mr-2" />
          </span>
          <span>
            AI Insights{' '}
            <span className="bg-white/20 rounded px-2 py-0.5 text-xs font-semibold ml-1">Beta</span>
          </span>
        </Button>
      )}
      {open && (
        <div
          className="shadow-lg rounded-lg w-96 bg-white border flex flex-col"
          style={{ minHeight: 240 }}
        >
          <div className="flex items-center justify-between p-4 border-b">
            <div className="font-bold text-lg">AI Comparison Result</div>
            <Button
              variant="ghost"
              size="icon"
              onClick={() => setOpen(false)}
              aria-label="Close"
              className="ml-2"
            >
              <X size={18} />
            </Button>
          </div>
          <div className="flex-1 overflow-y-auto p-4" style={{ maxHeight: 240 }}>
            {loading ? (
              <div className="flex items-center gap-2 text-gray-500">
                <Loader2 className="animate-spin" size={20} />
                Analyzing...
              </div>
            ) : (
              <div className="text-gray-900 whitespace-pre-line">{aiResult}</div>
            )}
          </div>
          <div className="px-4 pb-2 text-xs text-gray-500">
            <div>
              <strong>Disclaimer:</strong> These insights are generated by AI and may contain
              inaccuracies. Please review results carefully before making decisions.
            </div>
            <div className="mt-1">Powered by TBD.</div>
          </div>
          <div className="p-4 border-t flex justify-end">
            <Button onClick={handleAICompare} disabled={loading}>
              <span className="flex items-center gap-1">
                <Sparkles size={16} />
                Regenerate Insight
              </span>
            </Button>
          </div>
        </div>
      )}
    </div>
  );
}

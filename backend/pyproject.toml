[tool.poetry]
name = "earthframe-backend"
version = "0.1.0"
description = "EarthFrame backend for the simulation comparison web app"
authors = ["Tom Vo <vo13@llnl.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "app" }]  # if your code lives in app/

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.13.2"
fastapi = "^0.111.0"
psycopg = {extras = ["binary"], version = "^3.2.1"}
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
python-dotenv = "^1.0.1"
sqlalchemy = "^2.0.34"
uvicorn = { extras = ["standard"], version = "^0.30.1" }

# python-jose = { extras = ["cryptography"], version = "^3.3.0" }
# passlib = { extras = ["bcrypt"], version = "^1.7.4" }
# python-multipart = "^0.0.9"
# fastapi-users = "^12.1.3"
transformers = "^4.53.1"
sentence-transformers = "^5.0.0"

[tool.poetry.group.dev.dependencies]
# After updating these to the latest versions,
# update pre-commit hooks with `pre-commit autoupdate`.
ipykernel = "6.30.1"
pytest = "7.4.2"
torch = "2.7.1"
ruff = "0.13.2"
pre-commit = "4.3.0"
mypy = "1.18.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "docs",
  "node_modules",
  "site-packages",
  "venv",
]

[tool.ruff.lint]
# E4 - whitespace
# E7 - multiple-statements
# E9 - trailing-whitespace
# F - Enable Pyflakes
# B - Enable flake8-bugbear
# W - Enable pycodestyle
# C901 - complex-structure
# D - Enable flake8-docstrings
# I - Enable isort
# E - Enable pycodestyle errors
select = ["E4", "E7", "E9", "F", "B", "W", "C901", "I", "E"]

# E501 - line-too-long
ignore = ["E501"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
# Docs: https://docs.pytest.org/en/7.2.x/reference/customize.html#configuration
junit_family = "xunit2"
addopts = "--cov=xcdat --cov-report term --cov-report html:tests_coverage_reports/htmlcov --cov-report xml:tests_coverage_reports/coverage.xml -s"
python_files = ["tests.py", "test_*.py"]
# These markers are defined in `xarray.tests` and must be included to avoid warnings when importing from this module.
markers = ["flaky", "network"]

[tool.mypy]
# Docs: https://mypy.readthedocs.io/en/stable/config_file.html
python_version = "3.13"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
